name: app CI/CD Pipeline

on:
  push:
    branches:
      - master
    paths:
      - 'app/**' # specify you app path
env:
  ImageName: app_name # specify your app name
  IMAGE_REPOSITORY: ${{ github.repository }}

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v1

      - name: Get commit SHA
        id: short_sha
        run: echo "SHORT_SHA=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_OUTPUT

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Get image name
        id: read-docker-image-identifiers
        run: echo "IMAGE_REPOSITORY=$(echo ${{ env.IMAGE_REPOSITORY }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and push container image to ghrc
        uses: docker/build-push-action@v4
        with:
          context: ./app_folder # specify your app folder including Dockerfile
          push: true
          tags: ghcr.io/${{env.IMAGE_REPOSITORY}}/${{env.ImageName}}:${{ steps.short_sha.outputs.SHORT_SHA }}
    outputs:
      imageTag: ${{ steps.short_sha.outputs.SHORT_SHA }}

  update_manifest:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Modify k8s manifest
        run: |
              eval $(ssh-agent -s)
              echo "${{ env.SSH_KEY }}" > deploy_key
              chmod 600 deploy_key
              ssh-add deploy_key
              git config --global user.email "github-action-bot@gmail.com"
              git config --global user.name "github-actions-bot"
              git clone git@github.com:your_repo_name.git
              cd your_repo_name
              sed -i "s/${{env.ImageName}}:.*/${{env.ImageName}}:${{needs.build_and_push.outputs.imageTag}}/g" path_to_your_app_deploy/deployment.yaml
              git add .
              git commit -m "new ${{env.ImageName}}:${{needs.build_and_push.outputs.imageTag}} deploy"
              git push origin main
        env:
          SSH_KEY: ${{ secrets.manifest_repo_ssh_key }}
